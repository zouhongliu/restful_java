package food;
/*
import javax.ws.rs.GET;
import javax.ws.rs.Produces;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
*/
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

/*

//The Java class will be hosted at the URI path "/helloworld"
@Path("/food")
public class Food {

 // The Java method will process HTTP GET requests
 @GET
 @Path("/zhl")
 // The Java method will produce content identified by the MIME Media
 // type "text/plain"
 @Produces("text/plain")
 public String getClichedMessage() {
     // Return some cliched textual content
     return "Hello World";
 };


    @GET
    @Path("/Autocomplete/{foodname}")
    @Produces("text/xml")
    public String getUser(@PathParam("foodname") String foodName) {
    	     // Return some cliched textual content
    	//String name = "Hello World" + foodName;
    	//String name = "add add add";
    	     //return name;
    	return "Hello World";
    }
}
*/


@Path("/food")
public class Food {

	 // The Java method will process HTTP GET requests
	 @GET
	 @Path("/test")
	 // The Java method will produce content identified by the MIME Media
	 // type "text/plain"
	 @Produces("text/plain")
	 public String getClichedMessage() {
	     // Return some cliched textual content
	     return "Hello World";
	 };
	
	 
	@GET
	@Path("{id}")
	public Response getFoodById(@PathParam("id") String id) {

		return Response.status(200)
			.entity("getUserByName is called, name : " + id).build();

	}
	 
	
	@GET
	@Path("/Autocomplete/{name}")
	public Response getFoodByName(@PathParam("name") String name) {

		return Response.status(200)
			.entity("getUserByName is called, name : " + name).build();

	}
	
	/*
	@GET
	public Response setfood(
		@QueryParam("name") String name,
		@QueryParam("company") String company,
		@QueryParam("foodNutritionTable") String nutritionTable) {
		
		return Response.status(200)
				.entity("setFood is called, name : " + name + ", company : " + company
						+ ", foodNutritionTable" + nutritionTable).build();
	}
	*/
	
	@POST
	//@Path("/query")
	public Response getUsers(
		@QueryParam("from") int from,
		@QueryParam("to") int to,
		@QueryParam("orderBy") String orderBy) {

		return Response
		   .status(200)
		   .entity("getUsers is called, from : " + from + ", to : " + to
			+ ", orderBy" + orderBy.toString()).build();

	}
	

}